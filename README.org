#+TITLE: Church Presenter
#+AUTHOR: Chris Cochrun

* Introduction
This is an attempt at building a church presentation application in Qt/QML. QML provides a very powerful and easy declarative way of creating a UI so it should also be a very simple method of creating on screen slides and presentations. This experiment is to see how difficult it is to rebuild these applications in QML as opposed to other more complicated systems. After digging through the source code of OpenLP, I discovered they are essentially creating a web server and rendering a webpage onto the screen to show slides. This felt like a waste of resources and added complexity when something so simple and useful as QML exists.

** Features (planned are in parentheses)
- Presents songs lyrics with image and video backgrounds
- Use MPV as a rendering system for videos
- Simple song creation with a powerful text parser
- Present Slides
- (Custom slide builder)
- (an intuitive UI) - Still needs A LOT of polish

** MPV
You will need MPV installed in order to use this. All videos run through it. This, however, enables us to make videos work very well and with a lot of control and since it uses ffmpeg underneath, nearly any codec regardless of underlying system. This prevents the need for the user to install other codecs to work with Windows or MacOS. It also means a much easier control system and the potential to stream web content as well without downloading first.

** Rust and CXX-QT
CXX-QT is a bridge framework for Rust and Qt. It works by piggybacking off of CXX and is a phenomenal tool to make a Qt app using Rust. More and more, I've been porting things over to Rust in the project using this bridge.

* Build and Run
First get the source code

Then into the root directory.
#+BEGIN_SRC
cd church-presenter
#+END_SRC

Then build.
#+BEGIN_SRC
cmake -B build/ . && make --dir build/
#+END_SRC

Then run.
#+BEGIN_SRC
./build/bin/presenter
#+END_SRC

** Nix
If you are using nix to develop with, which I would suggest since that will make sure all the appropriate dependencies are installed, you'll need to do the following:
#+begin_src 
cd church-presenter
nix develop
#+end_src

This drops you into a shell with all the right dependencies.

*If you have direnv*
#+begin_src sh
cd church-presenter
direnv allow
#+end_src

Then just as before build and run it the way you would.

* Contact Me
If, for whatever reason, you need to contact me and get something ironed out, please do so at [[mailto:chris@tfcconnection.org][chris@cochrun.xyz]]
