#+TITLE: Todo List
:PROPERTIES:
:CATEGORY: dev
:END:

* Tasks [72%] [31/43]

** TODO Start planning out what a 1.0 release would look like and decide how to get there :roadmap:
A 1.0 release may be achievable soon as long as I can figure out what is good to have in and what isn't. Then figure out what outstanding bugs and odd workflows exist and fix them. Then figure out deploying the package to various distros, windows, and mac.

*** DONE REFACTORING THE BACKEND
A large portion of the back I am refactoring to create a slide class with a slide object for QML to look at as the master slide. Then a slide model for us to use to know for sure what the next slide will look like always and jump to it better within listviews and gridviews. Then use a serviceitemmodel that is aware of the slidemodel to know which slides belong to it. A lot of the UI will need to be refactored a bit to point to the new objects properly.

Could start working on moving slide.h and slide.cpp to a slide.rs. Then creating a slide_object.rs. Then maybe a service_item.rs. Creating these very basic classes in Rust would mean I start learning more and more Rust, and I would be preventing more memory bugs.

*** TODO What is out
Some of the special effects and things that I wanted to do could perhaps hold off. A lot of the things that I want to do to help make this really special could hold off. Blur, Color Adjustments, and Shadows for backgrounds and text and stuff can hold off for now. More of the special propresenter kind of things.

Others:
- Grid Layout
- Detail Layout
- Effects
- Overall Search
*** TODO What is In
I need to make the UI fit so much better. A lot of making the UI work is going to start being top priority. So for starters.

Others:
- Multi Select and Delete
  - Need to have the model give back all ids of the selected items so they can be manipulated
- Multi Drag? Maybe...
- Adding the ability to use Librepresenter in other wayland compositors - Need to address the QWindow problem.
*** TODO Major Bugs
- ~Drag and Drop of ServiceList~
  this is fixed, but now I need to move the slides around as you change the serviceItemModel
- UI Blocking when saving
*** TODO Deployment
- [ ] Linux
  Need to figure out if I can use Nix to deploy in various fashions. Maybe I'll need to handcraft my own things for Arch, flatpak, and or snap.
- [ ] Windows
- [ ] Macos
** TODO UI Blocks while saving :bug:
** TODO give images an aspect ratio option :feature:
** TODO Fix ImageEditor to make more sense for images :ui:
** TODO Add image slideshow with looping :feature:
I could add this by adding a bool as a gallery option in the ImageSqlModel. Then add a loop bool as well. Then perhaps I'd ask if this image item contains a gallery and if so, make sure to loop through all of the filePaths as they could be saved as a list instead of a single filepath. Then decide on the last one whether or not to loop back to the beginning based on the loop bool in the image item.
** TODO Add image gallery options :feature:
** TODO Add video repeat pieces :feature:
This is possible with a toggle in the presenter but it'd be even better to have that built into the video model so that videos remember whether they should repeat. This would make sense in things like countdowns or video slideshows.
** TODO Make libraries and models aware of being selected.
This allows us to drag multiple to service list and delete multiple.
final part to this is allowing for multiple select and multiple move in service list or library

This is mostly done, just need to include the ability to multi select and then figure out multi drag.
** WAIT Make toolbar functional for =songeditor= [3/4] [75%]           :core:
[[file:~/dev/church-presenter/src/qml/presenter/SongEditor.qml::Controls.ToolBar {]]

- [X] alignment
- [X] font - Need to finish the UI portion of it
- [X] fontsize - Need to finish the UI portion of it
- [ ] effects?
  For effects, I'm not 100% sure how to do this in an easy to build out way. Should I just do them the same as the other attributes or have effects be individually stored? Which effects to use?

  I'm thinking shadows for sure for readability on slides. Also, maybe I should have an effect of like glow? But maybe I'll come back to this after more of the core system is finished.

** TODO Build out a slide preview system so we can see each slide in the song or image slideshow :ui:
[[file:~/dev/church-presenter/src/qml/presenter/SongEditor.qml::Presenter.SlideEditor {]]

- [X] Initial ListView with text coming from =getLyricList=
- [X] Depending on this [[*Need to make getLyricList give back the verses with empty lines as separate slides][Need to make getLyricList give back the verses with empty lines as separate slides]]
- [X] Need to perhaps address the MPV crashing problem for a smoother experience.

  Essentially, mpv objects cause a seg fault when we remove them from the qml graph scene and are somehow re-referencing them. Using =reuseItems=, I can prevent the seg fault but then we are storing a lot of things in memory and will definitely cause slowdowns on older hardware. So far I haven't seen too many problems with the =reuseItems= piece yet.

  Apparently, I still have crashing

  Setting a really high =cacheBuffer= in the ListView seems to have fixed the crashing, but will result in higher memory use. As of right now we are using 1.1Gb total, so I may think of a better solution later, but for now, that'll have to work.

- [X] There is also a small hiccup in switching between songs. I appears as if songs that don't have any slides will have ghost slides from the previously selected song.

- [ ] Another issue I discovered was that when switching to a song with videoBackgrounds, the mpv object doesn't ALWAYS load the first frame of the slide. Can I let the video play a tiny bit longer to make sure frames ALWAYS get loaded? That didn't work..

- [ ] There is one other issue with videoBackgrounds now going black on the second slide after switching to a slideModel. I need to check if the videos are the same and if so do nothing.

  Maybe I'll need to change something else but what?

** TODO Finish toolbar in presentation display :ui:
[[file:~/dev/church-presenter/src/qml/presenter/Presentation.qml::Controls.ToolBar {]]

** TODO Need to test on other wayland compositors but Hyprland doesn't show the presentation window.

** WAIT nix-shell needs a little bit of work perhaps yet. But may be working under plasma just not minimal window managers using qt5ct.
https://discourse.nixos.org/t/developing-kirigami-applications/19947/17
This thread helped a lot


** DONE Library and ServiceList scrollbar is in the way            :bug:ui:
** DONE bug in dragging servicelist items to reorder. Maybe I can fix with me simplified model system :bug:
I switched back to using Kirigami.dragHandler and properly implemented moveRows in the serviceItemModel
** DONE Check for edge cases in inputing wrong vorder and lyrics     :core:
[[file:~/dev/church-presenter/TODO.org::*Fix broken append when importing River song][Fix broken append when importing River song]]

Let's test this, because I think I fixed it.
*still extra bits on last slide*

** DONE Fix possible bug in arrangingItems in draghandler [1/3] [33%]   :bug:
[[file:~/dev/church-presenter/src/qml/presenter/DragHandle.qml::function arrangeItem() {]]

- [X] Basic fixed drag n drop
- [ ] Allow for a less buggy interaction
  I think one of the major problems has to do with moving the item while I am still draggin it. This means that I am then shifting the item's id whilst dragging and causing some unsuspected behavior? Not sure, need to maybe consult some one else if possible.
- [ ] Need to check for edge cases

** DONE Make serviceItemModel aware of being selected and active
Being selected means that those items can be dragged or deleted or moved together.
Being active, means that the singular item is the currently displayed item.
** DONE ServiceItemModel load needs to first look for on disk path and then the archive path
Check audio and background first, if they don't exist, grab the file in the archive and put it in the local folder and use that path to create the serviceitem
** DONE Unload video when switching to something with just image :core:bug:
** DONE Create a nextslide function to be used after the end of the list of slides :slide:
[[file:~/dev/church-presenter/src/qml/presenter/Presentation.qml::function nextSlide() {]]

- [ ] Check to make sure this works in all conditions but I believe it works ok.

** DONE To finish the UX of which item is active, the Presentation needs to switch to the active slide in the preview system.
- To make this work I think I'll need to make serviceitemmodel able to signal when a particular item is active and give it's index so the list can follow suit. nevermind, I can just check if it's active in the delegate.
** DONE Images stored in sql need to have aspect saved and applied dynamically here :core:
[[file:~/dev/church-presenter/src/qml/presenter/Slide.qml::fillMode: Image.PreserveAspectCrop]]
I didn't save the aspect, but I applied it based on type of item first, we can change that later.
** DONE VideoSQL Model and SQLite system needs fixing                 :bug:
[[file:src/videosqlmodel.cpp::if (!query.exec("CREATE TABLE IF NOT EXISTS 'videos' ("]]

** DONE Add ability to use arrow keys to move through slides :core:feature:
** DONE Make sure the video gets changed in a proper manner to not have left over video showing from previous items :video:slide:
[[file:~/dev/church-presenter/src/qml/presenter/Presentation.qml::currentServiceItem++;]]

- [X] Build a basic system that changes to black first and then switches to the video
- [ ] Build out a loading system that will load the next video if it needs to and then the switch can be instant.

  The second option is the best, but requires a lot more work. I have the first already working so I'll come back to this once I have more of an idea of how to do it.

** DONE Add an audio file to the song so that it will play when the song is presented :feature:song:
- [X] Add audio file to model
- [X] add ui for adding audio file
- [X] add extra mpv piece to slide to play audio file
** DONE Make the hover effect of dragging items over the servicelist show in the correct spot at all times.
Believe I've fixed this

** DONE add a dropping area in the library                     :feature:ui:
- [X] Basic droparea
- [X] Determine which library to add to based on extension.
- [X] Add a presentation model so that presentations can be added this way.
** DONE images and videos need a better get system
[[file:~/dev/church-presenter/src/videosqlmodel.cpp::QVariantList VideoSqlModel::getVideo(const int &row) {]]

** DONE Bug in mpv race condition with selecting with the presenter but not with the actual PresentationWindow. :bug:
when selecting an item in the ServiceList, if the PresentationWindow isn't visible, it seems to prompt mpv to show a window of it's own with the video playing if the item contains a video.

** DONE Find a way to maths the textsize                            :slide:
[[file:~/dev/church-presenter/src/qml/presenter/Slide.qml::property real textSize: 50]]

This may not be as needed. Apparently the text shrinks to fit it's space.

** DONE Fix bug in not removing old slides in the SongEditor when switching songs from the Library :bug:

** DONE Need to make =getLyricList= give back the verses with empty lines as separate slides :core:
[[file:~/dev/church-presenter/src/songsqlmodel.cpp:://TODO make sure to split empty line in verse into two slides]]
** DONE bug in changing slides with the arrows                         :core:
[[file:~/dev/church-presenter/src/qml/presenter/Presentation.qml::function changeSlide() {]]

slides are inconsistent in changing from one slide to the next or previous. Both functions need looked at.

Maybe my best solution would be to architect a model or class for both the presentation controller and the presentation window to follow and do all the heavy lifting in there.

Finished the arrows working through a proper c++ class

** DONE Fix broken append when importing River song
[[file:~/dev/church-presenter/src/qml/presenter/LeftDock.qml::function appendItem(name, type, background, backgroundType, text, itemID) {]]

This was due to the song not having a vorder. Need to protect from edge cases of the user inputing the formatted text that doesn't fit what's expected in code.

** DONE implement previousSlide and previousAction
[[file:~/dev/church-presenter/src/qml/presenter/Presentation.qml::function nextSlide() {]]

** DONE Need to make ListModel capable of bringing in a string list [2/2] [100%]
- [X] Create a Model
- [X] Create a class that we'll make a list of in the model

** DONE [#A] Make Presentation Window follow the presenter component   :core:
[[file:~/dev/church-presenter/src/qml/presenter/MainWindow.qml::Presenter.Slide {]]

Starting this by creating a slide singleton that will carry the variables for the current visible slide in the presentation.

May need to think about making this a slide class for all possible slides and a presentation singleton which carries the slide, but first I'll work out if this implementation works instead.

The left dock doesn't carry the change from the arrow buttons and the video on the actual presentation doesn't load.'

All pieces working now

** DONE Make an image sql model
[[file:~/dev/church-presenter/src/videosqlmodel.h::ifndef VIDEOSQLMODEL_H]]

** DONE Parse Lyrics to create a list of strings for slides
SCHEDULED: <2022-03-23 Wed 10:00>

** DONE BUG in dropping and then selecting song will duplicate entries :dev:
SCHEDULED: <2022-04-05 Tue>
[[file:~/dev/church-presenter/src/qml/presenter/LeftDock.qml::Layout.fillHeight: true]]

or at least turns the entry above it into the same as itself while retaining it's title?

** DONE Make nextSlideText a nextAction function to incorporate other types of items
[[file:~/dev/church-presenter/src/qml/presenter/Presentation.qml::function nextSlideText() {]]

** DONE Fix file dialog using basic QT theme
[[file:~/dev/church-presenter/src/qml/presenter/SongEditor.qml::FileDialog {]]


